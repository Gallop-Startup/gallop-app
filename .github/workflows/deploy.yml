name: Deploy to Heroku

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Ensure .python-version exists (required by Heroku)
      run: echo "3.13" > .python-version

    - name: Install Heroku CLI
      run: curl https://cli-assets.heroku.com/install.sh | sh

    - name: Authenticate with Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku auth:whoami

    - name: Set Heroku Git Remote            
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku git:remote -a gallop

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Decode CA Certificate
      env:
        CA_CERTIFICATE: ${{ secrets.CA_CERTIFICATE }}
      run: |
        echo "$CA_CERTIFICATE" | base64 --decode > /tmp/ca-certificate.crt
        ls -l /tmp/ca-certificate.crt    

    - name: Set CA Certificate Path in Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        heroku config:set DB_SSL_CA=/tmp/ca-certificate.crt --app gallop    

    - name: Run tests
      run: |
        python manage.py test

    - name: Collect static files
      run: python manage.py collectstatic --noinput    

    - name: Ensure Heroku Buildpacks are Set
      run: |
        heroku buildpacks:set heroku/python
        heroku stack:set heroku-24   

    - name: Push to Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        git push heroku main

    - name: Run database migrations
      run: heroku run python manage.py migrate --app gallop    
